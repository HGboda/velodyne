project(DbitePlayer)
#to see command line of gcc
set(CMAKE_VERBOSE_MAKEFILE 0)
#to configure c++ compiler
set(CMAKE_CXX_COMPILER="g++")
# to add Color on CMake Process
set(CMAKE_COLOR_MAKEFILE ON)

# for the header file generated by the UIC
include_directories(${CMAKE_BINARY_DIR}/DBITEPlayer)

include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include)
include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/kernel)
link_directories (${QT_LIBRARIES})
link_directories (${CMAKE_SOURCE_DIR}/PACPUS/lib)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/PACPUS/bin)

#///////////////////////////////////////////////////////////////////////
# CORE FILES
#///////////////////////////////////////////////////////////////////////
set(DBITEPLAYER_SOURCES_CORE
../Sensor/src/Video/ImageViewer.cpp
src/DbtPlyEngine.cpp
src/DbtPlyUserInterface.cpp
src/DbtPlyEngineStateChart.cpp
src/DbtPlyFileManager.cpp
src/DbtPlyTrigger.cpp
src/SensorTcpServer.cpp
src/serverinterface.cpp
src/cvisServer.cpp
src/main.cpp
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyEngine.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyFileManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyTrigger.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyEngineStateChart.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUserInterface.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/SensorTcpServer.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/cvisServer.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/serverinterface.h
)

#///////////////////////////////////////////////////////////////////////
# FILE MANAGERS FILES
#///////////////////////////////////////////////////////////////////////
set(DBITEPLAYER_SOURCES_FILEMANAGERS
#src/DbtPlyTelemetreManager.cpp
src/DbtPlyGgaManager.cpp
src/DbtPlyAlascaManager.cpp
src/DbtPlyImageManager.cpp
src/DbtPlyAbsManager.cpp
src/DbtPlyGstManager.cpp
src/DbtPlyGyrokvhManager.cpp
src/DbtPlyCanManager.cpp
src/DbtPlyStereoManager.cpp
src/OmasUdpServer.cpp
src/OmasDataCollector.cpp
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGyrokvhManager.h
#${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyTelemetreManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyImageManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyAbsManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGgaManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyAlascaManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGstManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyCanManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyStereoManager.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/OmasUdpServer.h
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/OmasDataCollector.h
)

if(WIN32)
  set(DBITEPLAYER_SOURCES
    src/DbtPlyIOShMemTel.cpp
    src/DbtPlyTelemetreManager.cpp
    src/DbtPlyRadarManager.cpp
    )

  if(GoogleEarth_FOUND)
    set(DBITEPLAYER_SOURCES
      ${DBITEPLAYER_SOURCES}
      src/DbtPlyGoogleEarth.cpp
      )
  endif(GoogleEarth_FOUND)
endif(WIN32)

#//////////////////////////////////////////////////////////////
# MOC (QT4)
#//////////////////////////////////////////////////////////////
set(DBITEPLAYER_MOC_CLASSES
  ${CMAKE_SOURCE_DIR}/PACPUS/include/sensor/ImageViewer.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyEngine.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyAbsManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGgaManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyFileManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyTrigger.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyEngineStateChart.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGyrokvhManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUserInterface.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyImageManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/SensorTcpServer.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/cvisServer.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/serverinterface.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyCanManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyRadarManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyStereoManager.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/OmasDataCollector.h
  ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/OmasUdpServer.h
  )

if(GoogleEarth_FOUND)
  set(DBITEPLAYER_MOC_CLASSES
    ${DBITEPLAYER_MOC_CLASSES}
    ${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyGoogleEarth.h
    )
endif(GoogleEarth_FOUND)

if(WIN32)
set(DBITEPLAYER_MOC_CLASSES
${DBITEPLAYER_MOC_CLASSES}
${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyTelemetreManager.h)
endif(WIN32)

if(WIN32)
set(DBITEPLAYER_UI_CLASSES
)
endif(WIN32)

#///////////////////////////////////////////////////////////////////////
# SerialComLib NEEDED
#///////////////////////////////////////////////////////////////////////
if(IS_DIRECTORY ${SerialComLib_BINARY_DIR})
	set(SerialComLib_Project SerialComLib)
	#---------------------------include--------------------------------------
	include_directories(${CMAKE_BINARY_DIR}/SerialCom)
	include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/SerialCom)
	include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/structure)

	#---------------------------file display--------------------------------------
	set(DBITEPLAYER_SOURCES_SERIALCOM_MANAGERS
	src/DbtPlySerialComMsgManager.cpp
	src/serialCOM_Msg.ui
	${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlySerialComMsgManager.h
	)
	
	#---------------------------moc and UI--------------------------------------
	set(DBITEPLAYER_MOC_CLASSES
	${DBITEPLAYER_MOC_CLASSES}
	${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlySerialComMsgManager.h
	#${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxManager.h
	#${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxSBASManager.h
	#${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyPolarxManager.hpp
	)
	set(DBITEPLAYER_UI_CLASSES
	${DBITEPLAYER_UI_CLASSES}
	src/serialCOM_Msg.ui
	)
	
	#///////////////////////////////////////////////////////////////////////
	# devGPS NEEDED
	#///////////////////////////////////////////////////////////////////////
	if(IS_DIRECTORY ${devGPS_BINARY_DIR})
		set(devGPS_Project devGPS GPSTK)
		#DONT USE THIS: set(CMAKE_CXX_FLAGS "/wd4290 /wd4274 /wd4996") #ï¿½a fait planter la compilation sous unix
		#---------------------------include--------------------------------------
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/SerialCom/Ublox)
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/SerialCom/Polarx)
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/SerialCom/SBF)
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/SerialCom/SBAS)
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/GPS/devGPS)
		include_directories(${CMAKE_SOURCE_DIR}/PACPUS/include/GPS/GPSTK)
		include_directories(${CMAKE_BINARY_DIR}/GPS/devGPS)

		#---------------------------file display----------------------------------
		set(DBITEPLAYER_SOURCES_SERIALCOM_MANAGERS
		${DBITEPLAYER_SOURCES_SERIALCOM_MANAGERS}
		src/DbtPlyUbloxManager.cpp
		src/DbtPlyUbloxSBASManager.cpp
		src/DbtPlyPolarxManager.cpp
		src/ublox.ui
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxManager.h
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxSBASManager.h
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyPolarxManager.hpp
		
		)
		
		#---------------------------moc and UI--------------------------------------
		set(DBITEPLAYER_MOC_CLASSES
		${DBITEPLAYER_MOC_CLASSES}
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxManager.h
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyUbloxSBASManager.h
		${CMAKE_SOURCE_DIR}/PACPUS/include/DbitePlayer/DbtPlyPolarxManager.hpp
		)
		set(DBITEPLAYER_UI_CLASSES
		${DBITEPLAYER_UI_CLASSES}
		src/ublox.ui
		)
		
	ELSE(IS_DIRECTORY ${devGPS_BINARY_DIR})
		message(STATUS "devGPS project is not enabled in cmake, related source in DbitePlayer project are disabled")

	endif(IS_DIRECTORY ${devGPS_BINARY_DIR})
	SOURCE_GROUP(FileManagers\\SerialCOM FILES ${DBITEPLAYER_SOURCES_SERIALCOM_MANAGERS} )
ELSE(IS_DIRECTORY ${SerialComLib_BINARY_DIR})
	message(STATUS "SerialComLib project is not enabled in cmake, related source in DbitePlayer project are disabled")
	
endif(IS_DIRECTORY ${SerialComLib_BINARY_DIR})

#///////////////////////////////////////////////////////////////////////
# QT4
#///////////////////////////////////////////////////////////////////////
QT4_WRAP_UI(DBITEPLAYER_UI_SOURCES_H ${DBITEPLAYER_UI_CLASSES})
qt4_wrap_cpp(DBITEPLAYER_MOC_SOURCES ${DBITEPLAYER_MOC_CLASSES})

#///////////////////////////////////////////////////////////////////////
# DIRECTORIES ARCHITECTURE
#///////////////////////////////////////////////////////////////////////
SOURCE_GROUP(FileManagers FILES ${DBITEPLAYER_SOURCES_FILEMANAGERS} )
SOURCE_GROUP(Core FILES ${DBITEPLAYER_SOURCES_CORE} )
SOURCE_GROUP(moc FILES ${DBITEPLAYER_MOC_SOURCES} ${DBITEPLAYER_UI_SOURCES_H})

#///////////////////////////////////////////////////////////////////////
# BUILD AND LINK
#///////////////////////////////////////////////////////////////////////

ADD_EXECUTABLE(DbitePlayer ${DBITEPLAYER_SOURCES} ${DBITEPLAYER_SOURCES_CORE} ${DBITEPLAYER_SOURCES_FILEMANAGERS} ${DBITEPLAYER_MOC_SOURCES} ${DBITEPLAYER_UI_SOURCES_H} ${DBITEPLAYER_SOURCES_SERIALCOM_MANAGERS})

if(UNIX)
target_link_libraries(DbitePlayer ${QT_LIBRARIES} PacpusLib FileLib PacpusTools ${SerialComLib_Project} ${devGPS_Project})
endif(UNIX)

if(WIN32)
target_link_libraries(DbitePlayer ${QT_LIBRARIES} PacpusLib FileLib RadarLib PacpusTools ROAD_TIME ${SerialComLib_Project} ${devGPS_Project})
endif(WIN32)

set_target_properties(DbitePlayer PROPERTIES DEBUG_POSTFIX "_d" )

install(TARGETS DbitePlayer RUNTIME DESTINATION ${CMAKE_SOURCE_DIR}/PACPUS/bin )

